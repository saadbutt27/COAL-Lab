$date
	Sat Nov 12 22:51:13 2022
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module tb $end
$var wire 1 ! Z $end
$var wire 1 " V $end
$var wire 32 # Result [31:0] $end
$var wire 1 $ N $end
$var wire 1 % C $end
$var reg 32 & A [31:0] $end
$var reg 32 ' B [31:0] $end
$var reg 3 ( ctrl [2:0] $end
$scope module dut $end
$var wire 32 ) A [31:0] $end
$var wire 32 * A_and_B [31:0] $end
$var wire 32 + A_or_B [31:0] $end
$var wire 32 , B [31:0] $end
$var wire 32 - B_not [31:0] $end
$var wire 1 % C $end
$var wire 1 " V $end
$var wire 3 . ctrl [2:0] $end
$var wire 1 / ctrl1_not $end
$var wire 32 0 not_Result [31:0] $end
$var wire 1 1 xnor_A_B_ctrl0 $end
$var wire 1 2 xor_A_Sum $end
$var wire 1 ! Z $end
$var wire 32 3 S1 [31:0] $end
$var wire 32 4 Result [31:0] $end
$var wire 1 $ N $end
$var wire 1 5 Cout $end
$var wire 32 6 A_sum_B [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
b1111000 6
05
b1111000 4
b110010 3
02
11
b11111111111111111111111110000111 0
1/
b0 .
b11111111111111111111111111001101 -
b110010 ,
b1110110 +
b10 *
b1000110 )
b0 (
b110010 '
b1000110 &
0%
0$
b1111000 #
0"
0!
$end
#100
1!
1%
15
01
b11111111111111111111111111111111 0
b0 #
b0 4
b11111111111111111110111111000011 -
b11111111111111111110111111000011 3
b1000000111100 *
b1000000111100 +
b0 6
b1 (
b1 .
b1000000111100 '
b1000000111100 ,
b1000000111100 &
b1000000111100 )
#200
1"
0!
b11111111111111111111111111111100 0
11
b11 #
b11 4
b10000000000000000000000000000000 3
12
b1111111111111111111111111111111 -
b10000000000000000000000000000000 *
b10000000000000000000000000000011 +
b11 6
b0 (
b0 .
b10000000000000000000000000000000 '
b10000000000000000000000000000000 ,
b10000000000000000000000000000011 &
b10000000000000000000000000000011 )
#300
1!
0"
01
0$
b11111111111111111111111111111111 0
0/
b0 #
b0 4
0%
12
b1010101010101010101010101010101 -
b10101010101010101010101010101010 3
b0 *
b11111111111111111111111111111111 +
b11111111111111111111111111111111 6
05
b10 (
b10 .
b10101010101010101010101010101010 '
b10101010101010101010101010101010 ,
b1010101010101010101010101010101 &
b1010101010101010101010101010101 )
#400
0!
b11110001111111001111111111110000 0
15
02
b1110000000110000000000001111 #
b1110000000110000000000001111 4
b11111111111111001111111111110000 -
b11111111111111001111111111110000 3
b1 *
b1110000000110000000000001111 +
b1101111111001111111111110010 6
b11 (
b11 .
b110000000000001111 '
b110000000000001111 ,
b1110000000000000000000000001 &
b1110000000000000000000000001 )
#500
