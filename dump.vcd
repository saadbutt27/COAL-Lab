$date
	Tue Nov 08 10:33:03 2022
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module tb $end
$var wire 32 ! Q [31:0] $end
$var reg 32 " A [31:0] $end
$var reg 32 # B [31:0] $end
$var reg 2 $ ctrl [1:0] $end
$scope module dut $end
$var wire 32 % A [31:0] $end
$var wire 32 & A_and_B [31:0] $end
$var wire 32 ' A_or_B [31:0] $end
$var wire 32 ( B [31:0] $end
$var wire 32 ) B_not [31:0] $end
$var wire 2 * ctrl [1:0] $end
$var wire 32 + S1 [31:0] $end
$var wire 32 , Q [31:0] $end
$var wire 1 - Cout $end
$var wire 32 . A_sum_B [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
b1101 .
0-
b1101 ,
b101 +
b0 *
b11111111111111111111111111111010 )
b101 (
b1101 '
b0 &
b1000 %
b0 $
b101 #
b1000 "
b1101 !
$end
#100
1-
b11 !
b11 ,
b11111111111111111111111111111010 +
b11 .
b1 $
b1 *
#200
0-
b101 +
b0 !
b0 ,
b1101 .
b10 $
b10 *
#300
1-
b1101 !
b1101 ,
b11111111111111111111111111111010 +
b11 .
b11 $
b11 *
#400
